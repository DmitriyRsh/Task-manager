@use 'sass:math';

$side-color: #D3C7F5;
$background: #EFEBFB;
$main-color: #6369D9;
$second-color: #D1D0F9;
$hover: #E459CE;
//@include adaptive("padding", 40, 10, 1);

$maxWidth: 1920;
$maxWidthContainer: 1140;
@mixin adaptive($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    }  @else if $type==2 {
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{property}: calc(#{$minSize + px} + #{addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    }  @else {
        #{property}: calc(#{$minSize + px} + #{addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}
@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
@function rem($px) {
    $result: math.div($px, 16) + rem;
    @return $result;
}
@function em($px) {
    $return: math.div($px, 16) + em;
    @return $result;
}
%hover {
    &:hover{
        background-color: #E459CE;
        transition: 0.5s;
    }
}
// calc(10px + (16 - 10) *((100vw - 320px) / (1200 - 320)))
